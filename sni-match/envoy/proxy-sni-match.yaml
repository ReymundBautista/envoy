admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8881
  
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    listener_filters:
    - name: envoy.listener.tls_inspector
      typed_config: {}
    filter_chains:
    - filter_chain_match:
        server_names: ["app.local"]
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: { filename: "/etc/app.crt" }
              private_key: { filename: "/etc/app.key" }
            alpn_protocols: [ "h2,http/1.1" ]
      filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          use_remote_address: true
          skip_xff_append: false
          stat_prefix: ingress_http
          ## Defaults to envoy
          server_name: "envoy"
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { path: "/whoami" }
                direct_response:
                  status: 200
                  body: 
                    inline_string: Congrats! You have SNI matched the app.local filter!"
              - match:
                  prefix: "/"
                route:
                  cluster: app
          http_filters:
            - name: envoy.router
    - filter_chain_match:
        server_names: ["app.alternate"]
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: { filename: "/etc/app.crt" }
              private_key: { filename: "/etc/app.key" }
            alpn_protocols: [ "h2,http/1.1" ]
      filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          use_remote_address: true
          skip_xff_append: false
          stat_prefix: ingress_http
          ## Defaults to envoy
          server_name: "envoy"
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { path: "/whoami" }
                direct_response:
                  status: 200
                  body: 
                    inline_string: "Congrats! You have SNI matched the app.alternate filter!"
              - match:
                  prefix: "/"
                route:
                  cluster: app2
          http_filters:
            - name: envoy.router
  clusters:
  - name: app
    connect_timeout: 5s
    type: LOGICAL_DNS
    hosts: [{ socket_address: { address: app, port_value: 80 }}]
  - name: app2
    connect_timeout: 5s
    type: LOGICAL_DNS
    hosts: [{ socket_address: { address: app2, port_value: 80 }}]
